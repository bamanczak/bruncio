---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../../layouts/BlogPost.astro";
import Switcher from "../../../components/Switcher.svelte";
import DesktopIcon from "../../../components/DesktopIcon.astro";
import BlogPostsTable from "../../../components/BlogPostsTable.svelte";
import TableOfContents from "../../../components/TableOfContents.astro";
import Comments from "../../../components/Comments.astro";
import BoringPage from "../../../layouts/BoringPage.astro";
// import Pane from "../../components/BlogPostPane.astro";
// import Comments from "../../components/Comments.astro";

export const prerender = true;
export async function getStaticPaths() {
	const posts = await getCollection("projects");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<"projects">;


let postMetaData: any[] = [];
const posts = await (
	await getCollection("projects")
).sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());
posts.forEach((post) => {
	let postData = post.data;
	postMetaData.push(postData);
});
---

<BoringPage
	title="all blogposts"
	description="all blog posts"
	ogImage=`https://brunc.io/og/asd.png`
>
	<BlogPostsTable client:load posts={postMetaData} linksPrefix="projects"/>
</BoringPage>
