---
import { Icon } from "astro-icon/components";
import IconDropdown from "../components/IconDropdown.svelte";

interface Props {
    iconName?:
        | "mdi:file-document-multiple"
        | "mdi:folder-open"
        | "mdi:person-help"
        | "mdi:photo-library"
        | "mdi:web"
        | "pixelarticons:article-multiple"
        | "pixelarticons:trash"
        | "pixelarticons:user"
        | "pixelarticons:human-run"
        | "pixelarticons:folder";
    label: string;
    position_x: number;
    position_y: number;
    iconFunction?: "navigate" | "openPanel";
    navigateTo?: string;
}
const {
    iconName,
    label,
    position_x,
    position_y,
    iconFunction = "openPanel",
    navigateTo = "",
} = Astro.props;

export let menu = true;
---

<astro-desktop-icon
    class="max-w-20 desktop-icon-container window-opener"
    data-openWindow={label}
    data-iconFunction={iconFunction}
    data-navigateTo={navigateTo}
    transition:persist
>
    <div
        class="draggable-icon flex flex-row"
        style=`left:${position_x}px; top:${position_y}px;`
    >
        <div
            class="desktop-icon-sub-container grow select-none group flex flex-col items-center justify-center
        border-4 p-1 border-mywhite border-opacity-0
        hover:bg-mywhite hover:bg-opacity-25 hover:border-opacity-100
        rounded-xl"
        >
            <Icon name={iconName} class="head" size={36} />
            <div
                class="text-base px-1 mt-1 bg-mywhite group-hover:bg-black group-hover:text-mywhite group-focus:bg-black group-focus:text-mywhite"
            >
                {label}
            </div>
        </div>
        <div
            class="flex flex-col items-center justify-center dropdownHover invisible -ml-6"
        >
            <div
                class="z-100 ml-1 dropdownHoverItem bg-black dark:bg-black divide-y divide-mywhite rounded-lg text:xs dark:text-mywhite text-mywhite"
            >
                <div class="p-2 cursor-pointer menu-pane-opener">Open</div>
            </div>
        </div>
    </div>
    <slot />
</astro-desktop-icon>

<script>
    import Bowser from "bowser";
    import {
        activatePanel,
        navigateToPanelPage,
    } from "../scripts/panesOpener.ts";
    import { moveObject } from "../scripts/windowMover.ts";

    function handleMyAction() {}

    class AstroDesktopIcon extends HTMLElement {
        constructor() {
            super();

            const draggableIcon = this.querySelector(
                ".draggable-icon",
            ) as HTMLElement;

            const draggableIconContainer = this.querySelector(
                ".desktop-icon-sub-container",
            ) as HTMLElement;

            draggableIconContainer.addEventListener("mousedown", (event) => {
                moveObject(draggableIcon, event as MouseEvent);
            });

            const panelName = this.getAttribute("data-openWindow") as string;
            const iconFunction = this.getAttribute(
                "data-iconFunction",
            ) as string;

            const parser = Bowser.getParser(navigator.userAgent);
            let iconClickEvent = "click";
            if (parser.getPlatformType() != "mobile") {
                iconClickEvent = "dblclick";
            }

            draggableIconContainer.addEventListener(iconClickEvent, (e) => {
                e.stopPropagation();
                handleIconAction();
            });

            const menuContainer = this.querySelector(".dropdownHover");
            const menuContainerItem = this.querySelector(".dropdownHoverItem");
            let openHint = false;
            draggableIconContainer.addEventListener("mouseenter", (e) => {
                e.stopPropagation();
                if (parser.getPlatformType() != "mobile") {
                    openHint = true;
                    setTimeout(function () {
                        if (openHint) {
                            menuContainer!.classList.remove("invisible");
                            menuContainerItem!.classList.remove("invisible");
                        }
                    }, 200);
                }
            });
            draggableIcon.addEventListener("mouseleave", () => {
                openHint = false;
                menuContainer!.classList.add("invisible");
                menuContainerItem!.classList.add("invisible");
            });

            const menuPaneOpener = this.querySelector(".menu-pane-opener");
            menuPaneOpener!.addEventListener("click", () => {
                handleIconAction();
            });

            const navigateToPath = this.getAttribute(
                "data-navigateTo",
            ) as string;

            function handleIconAction() {
                if (iconFunction == "openPanel") {
                    activatePanel(panelName);
                } else if (iconFunction == "navigate") {
                    if (window.location.href.endsWith(navigateToPath)) {
                        activatePanel("mainPanel");
                    } else {
                        navigateToPanelPage(navigateToPath);
                    }
                }
            }
        }
    }

    customElements.define("astro-desktop-icon", AstroDesktopIcon);
</script>
<style>
    .my-shadow {
        box-shadow: 4px 4px 0 rgba(64, 64, 64, 0.8);
    }

    .draggable-icon {
        position: absolute;
        min-width: 150px;
    }
</style>
