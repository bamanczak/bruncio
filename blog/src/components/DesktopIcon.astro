---
import Pane from "../components/Pane.astro";
import { Icon } from "astro-icon/components";

interface Props {
    iconName?:
        | "mdi:file-document-multiple"
        | "mdi:folder-open"
        | "mdi:person-help"
        | "mdi:photo-library"
        | "mdi:web"
        | "pixelarticons:article-multiple"
        | "pixelarticons:trash"
        | "pixelarticons:user"
        | "pixelarticons:folder";
    label: string;
    position_x: number;
    position_y: number;
    iconFunction?: "navigate" | "openPanel";
    navigateTo?: string;
}
const {
    iconName,
    label,
    position_x,
    position_y,
    iconFunction = "openPanel",
    navigateTo = "",
} = Astro.props;
---

<astro-desktop-icon
    class="max-w-20 desktop-icon-container window-opener"
    data-openWindow={label}
    data-iconFunction={iconFunction}
    data-navigateTo={navigateTo}
    transition:persist
>
    <div
        class="draggable-icon desktop-icon-sub-container cursor-pointer grow select-none flex flex-col items-center justify-center
        border-4 p-1 border-mywhite border-opacity-0
        hover:bg-mywhite hover:bg-opacity-25 hover:border-opacity-100
        rounded-xl group"
        style=`left:${position_x}px; top:${position_y}px;`
    >
        <Icon name={iconName} class="head" size={36} />
        <div
            class="text-base px-1 mt-1 bg-mywhite group-hover:bg-black group-hover:text-mywhite group-focus:bg-black group-focus:text-mywhite"
        >
            {label}
        </div>
    </div>
    <slot />
</astro-desktop-icon>

<script>
    import {
        activatePanel,
        navigateToPanelPage,
    } from "../scripts/panesOpener.ts";
    import { moveObject } from "../scripts/windowMover.ts";

    class AstroDesktopIcon extends HTMLElement {
        constructor() {
            super();

            const draggableIcon = this.querySelector(
                ".draggable-icon",
            ) as HTMLElement;

            draggableIcon.addEventListener("mousedown", (event) => {
                moveObject(draggableIcon, event as MouseEvent);
            });

            const panelName = this.getAttribute("data-openWindow") as string;
            const iconFunction = this.getAttribute(
                "data-iconFunction",
            ) as string;
            draggableIcon.addEventListener("click", () => {
                if (iconFunction == "openPanel") {
                    activatePanel(panelName);
                } else if (iconFunction == "navigate") {
                    const navigateToPath = this.getAttribute(
                        "data-navigateTo",
                    ) as string;
                    if (window.location.href.endsWith(navigateToPath)) {
                        activatePanel("mainPanel");
                    } else {
                        navigateToPanelPage(navigateToPath);
                    }
                }
            });
        }
    }

    customElements.define("astro-desktop-icon", AstroDesktopIcon);
</script>
<style>
    .my-shadow {
        box-shadow: 4px 4px 0 rgba(64, 64, 64, 0.8);
    }

    .draggable-icon {
        position: absolute;
    }
</style>
